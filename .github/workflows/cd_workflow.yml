name: CD Workflow

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      IMAGE_NAME: "superremm/order-service"  # Define el nombre de la imagen aquí
      EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }} # Asegúrate de definir esto en secrets
      DEPLOYMENT_NAME: "order-service"                  # Ajusta según tu despliegue
      CONTAINER_NAME: "order-service"                  # Ajusta según tu contenedor
    
    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Build Docker Image
      - name: Build Docker Image        
        run: |
          echo "IMAGE_NAME: ${{ env.IMAGE_NAME }}"  # Verifica que la variable no está vacía
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ secrets.ECR_REPOSITORY_URI }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ secrets.ECR_REPOSITORY_URI }}/${{ env.IMAGE_NAME }}:latest

      # Step 3: Push Docker Image to ECR
      # Set up AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Log in to Amazon ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Push image to Amazon ECR
      - name: Push to ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/${{ env.IMAGE_NAME }}:latest

      # Step 4: Update EKS Deployment
      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}
          
      # Step 9: Desplegar en EKS
      - name: Deploy to EKS
        run: |
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} ${{ env.CONTAINER_NAME }}=${{ secrets.ECR_REPOSITORY_URI }}/${{ env.IMAGE_NAME }}:latest
